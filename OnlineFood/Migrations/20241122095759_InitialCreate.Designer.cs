// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineFood.Data;

#nullable disable

namespace OnlineFood.Migrations
{
    [DbContext(typeof(OnlineFoodContext))]
    [Migration("20241122095759_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FunctionRole", b =>
                {
                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("FunctionId", "RoleId");

                    b.ToTable("FunctionRole");
                });

            modelBuilder.Entity("OnlineFood.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Idrole")
                        .HasColumnType("int")
                        .HasColumnName("idrole");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("matKhau");

                    b.Property<string>("TenHienThi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenHienThi");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("userName");

                    b.HasKey("Id")
                        .HasName("PK__Account__3213E83F6ABF2C73");

                    b.HasIndex("Idrole");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("OnlineFood.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdKhachHang")
                        .HasColumnType("int")
                        .HasColumnName("idKhachHang");

                    b.Property<int>("IdKm")
                        .HasColumnType("int")
                        .HasColumnName("idKM");

                    b.Property<int>("IdNhanVien")
                        .HasColumnType("int")
                        .HasColumnName("idNhanVien");

                    b.Property<int>("IdOrderInfo")
                        .HasColumnType("int")
                        .HasColumnName("idOrderInfo");

                    b.Property<int>("IdPhuongThuc")
                        .HasColumnType("int")
                        .HasColumnName("idPhuongThuc");

                    b.Property<DateTime>("NgayCheckIn")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCheckIn");

                    b.Property<DateTime>("NgayCheckOut")
                        .HasColumnType("datetime")
                        .HasColumnName("ngayCheckOut");

                    b.Property<double>("TongTienSau")
                        .HasColumnType("float")
                        .HasColumnName("tongTienSau");

                    b.Property<double>("TongTienTruoc")
                        .HasColumnType("float")
                        .HasColumnName("tongTienTruoc");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trangThai");

                    b.HasKey("Id")
                        .HasName("PK__Bill__3213E83FCC72FE7F");

                    b.HasIndex("IdKhachHang");

                    b.HasIndex("IdKm");

                    b.HasIndex("IdNhanVien");

                    b.HasIndex("IdOrderInfo");

                    b.HasIndex("IdPhuongThuc");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("OnlineFood.Models.BillSupply", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("IdNhaCungCap")
                        .HasColumnType("int")
                        .HasColumnName("idNhaCungCap");

                    b.Property<int>("Idordersupplies")
                        .HasColumnType("int")
                        .HasColumnName("idordersupplies");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mota");

                    b.HasKey("Id")
                        .HasName("PK__BillSupp__3213E83F61ED6F47");

                    b.HasIndex("IdNhaCungCap");

                    b.HasIndex("Idordersupplies");

                    b.ToTable("BillSupplies");
                });

            modelBuilder.Entity("OnlineFood.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdFood")
                        .HasColumnType("int")
                        .HasColumnName("idFood");

                    b.Property<int>("IdKm")
                        .HasColumnType("int")
                        .HasColumnName("idKM");

                    b.HasKey("Id")
                        .HasName("PK__Cart__3213E83F6D40E2AE");

                    b.HasIndex("IdFood");

                    b.HasIndex("IdKm");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("OnlineFood.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("diaChi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int>("IdAccount")
                        .HasColumnType("int")
                        .HasColumnName("idAccount");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("SoTienTieu")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("soTienTieu");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenKhachHang");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3213E83F56720074");

                    b.HasIndex("IdAccount");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("OnlineFood.Models.DeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<double>("Gia")
                        .HasColumnType("float")
                        .HasColumnName("gia");

                    b.Property<string>("Tenphuongthucthanhtoan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenphuongthucthanhtoan");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int")
                        .HasColumnName("trangthai");

                    b.HasKey("Id")
                        .HasName("PK__Delivery__3213E83F434C64A6");

                    b.ToTable("DeliveryMethod");
                });

            modelBuilder.Entity("OnlineFood.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly>("Birth")
                        .HasColumnType("date")
                        .HasColumnName("birth");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("diaChi");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("dienThoai");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int>("IdShift")
                        .HasColumnType("int")
                        .HasColumnName("idShift");

                    b.Property<int>("Idaccount")
                        .HasColumnType("int")
                        .HasColumnName("idaccount");

                    b.Property<DateOnly>("NgayBatDau")
                        .HasColumnType("date")
                        .HasColumnName("ngayBatDau");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenNhanVien");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trangThai");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3213E83F31CDC759");

                    b.HasIndex("IdShift");

                    b.HasIndex("Idaccount");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("OnlineFood.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("GiaTien")
                        .HasColumnType("int")
                        .HasColumnName("giaTien");

                    b.Property<byte[]>("Hinhanh")
                        .HasColumnType("image")
                        .HasColumnName("hinhanh");

                    b.Property<int>("IdDanhMuc")
                        .HasColumnType("int")
                        .HasColumnName("idDanhMuc");

                    b.Property<string>("Mota")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mota");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("size");

                    b.Property<int>("Soluong")
                        .HasColumnType("int")
                        .HasColumnName("soluong");

                    b.Property<string>("TenMonAn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenMonAn");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trangThai");

                    b.HasKey("Id")
                        .HasName("PK__Food__3213E83FCCEB0F11");

                    b.HasIndex("IdDanhMuc");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("OnlineFood.Models.FoodCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<byte[]>("Hinhanh")
                        .HasColumnType("image")
                        .HasColumnName("hinhanh");

                    b.Property<string>("Mota")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mota");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenDanhMuc");

                    b.HasKey("Id")
                        .HasName("PK__FoodCate__3213E83FB8440025");

                    b.ToTable("FoodCategory");
                });

            modelBuilder.Entity("OnlineFood.Models.Function", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Mota")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mota");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trangThai");

                    b.HasKey("Id")
                        .HasName("PK__Function__3213E83FBA4A7A33");

                    b.ToTable("Function");
                });

            modelBuilder.Entity("OnlineFood.Models.InfoFood", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdFood")
                        .HasColumnType("int")
                        .HasColumnName("idFood");

                    b.Property<int>("IdNguyenLieu")
                        .HasColumnType("int")
                        .HasColumnName("idNguyenLieu");

                    b.Property<string>("Mota")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mota");

                    b.Property<int>("Songuyenlieucan")
                        .HasColumnType("int")
                        .HasColumnName("songuyenlieucan");

                    b.HasKey("Id")
                        .HasName("PK__InfoFood__3213E83F7136D0CC");

                    b.HasIndex("IdFood");

                    b.HasIndex("IdNguyenLieu");

                    b.ToTable("InfoFood");
                });

            modelBuilder.Entity("OnlineFood.Models.Latest", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("IdBill")
                        .HasColumnType("int")
                        .HasColumnName("idBill");

                    b.Property<int>("IdBillSupplies")
                        .HasColumnType("int")
                        .HasColumnName("idBillSupplies");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int")
                        .HasColumnName("idCustomer");

                    b.Property<int>("IdOrderSupplies")
                        .HasColumnType("int")
                        .HasColumnName("idOrderSupplies");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("noiDung");

                    b.HasKey("Id")
                        .HasName("PK__Latest__3213E83FCA79A96C");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdBillSupplies");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdOrderSupplies");

                    b.ToTable("Latest");
                });

            modelBuilder.Entity("OnlineFood.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("IdBill")
                        .HasColumnType("int")
                        .HasColumnName("idBill");

                    b.Property<int>("IdBillsupplies")
                        .HasColumnType("int")
                        .HasColumnName("idBillsupplies");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int")
                        .HasColumnName("idCustomer");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int")
                        .HasColumnName("idOrder");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("noiDung");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3213E83F543FA400");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdBillsupplies");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdOrder");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("OnlineFood.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("IdCart")
                        .HasColumnType("int")
                        .HasColumnName("idCart");

                    b.Property<int>("IdDelivery")
                        .HasColumnType("int")
                        .HasColumnName("idDelivery");

                    b.Property<int>("IdFood")
                        .HasColumnType("int")
                        .HasColumnName("idFood");

                    b.Property<int>("IdKhachHang")
                        .HasColumnType("int")
                        .HasColumnName("idKhachHang");

                    b.Property<int>("TongSoLuong")
                        .HasColumnType("int")
                        .HasColumnName("tongSoLuong");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("trangThai");

                    b.HasKey("Id")
                        .HasName("PK__Order__3213E83FE6A07C37");

                    b.HasIndex("IdCart");

                    b.HasIndex("IdDelivery");

                    b.HasIndex("IdFood");

                    b.HasIndex("IdKhachHang");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("OnlineFood.Models.OrderInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdMonAn")
                        .HasColumnType("int")
                        .HasColumnName("idMonAn");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<string>("Mota")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mota");

                    b.Property<int>("SoLuongHangMon")
                        .HasColumnType("int")
                        .HasColumnName("soLuongHangMon");

                    b.HasKey("Id")
                        .HasName("PK__OrderInf__3213E83F6CEDEB0F");

                    b.HasIndex("IdMonAn");

                    b.HasIndex("IdUser");

                    b.ToTable("OrderInfo");
                });

            modelBuilder.Entity("OnlineFood.Models.OrderSupply", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime")
                        .HasColumnName("datetime");

                    b.Property<string>("Donvi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("donvi");

                    b.Property<int>("IdNhaCungCap")
                        .HasColumnType("int")
                        .HasColumnName("idNhaCungCap");

                    b.Property<int>("IdNhanVien")
                        .HasColumnType("int")
                        .HasColumnName("idNhanVien");

                    b.Property<string>("Mota")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mota");

                    b.Property<string>("SoLuongNguyenLieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("soLuongNguyenLieu");

                    b.Property<string>("TenNguyenLieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenNguyenLieu");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trangThai");

                    b.HasKey("Id")
                        .HasName("PK__OrderSup__3213E83F101BD7AC");

                    b.HasIndex("IdNhaCungCap");

                    b.HasIndex("IdNhanVien");

                    b.ToTable("OrderSupplies");
                });

            modelBuilder.Entity("OnlineFood.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Mota")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("mota");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("phuongThucThanhToan");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("trangThai");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3213E83FA0251728");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("OnlineFood.Models.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("IdKm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("idKM");

                    b.Property<DateOnly>("NgayBd")
                        .HasColumnType("date")
                        .HasColumnName("ngayBD");

                    b.Property<DateOnly>("NgayKt")
                        .HasColumnType("date")
                        .HasColumnName("ngayKT");

                    b.Property<string>("Noidung")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("noidung");

                    b.Property<int>("PhanTram")
                        .HasColumnType("int")
                        .HasColumnName("phanTram");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trangThai");

                    b.HasKey("Id")
                        .HasName("PK__Promotio__3213E83F1B2C5333");

                    b.ToTable("Promotion");
                });

            modelBuilder.Entity("OnlineFood.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Mota")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mota");

                    b.Property<string>("TenRole")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenRole");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trangThai");

                    b.HasKey("Id")
                        .HasName("PK__Role__3213E83FCA7186AB");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("OnlineFood.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<TimeOnly>("GioBatDau")
                        .HasColumnType("time")
                        .HasColumnName("gioBatDau");

                    b.Property<TimeOnly>("GioKetThuc")
                        .HasColumnType("time")
                        .HasColumnName("gioKetThuc");

                    b.Property<DateOnly>("NgayCa")
                        .HasColumnType("date")
                        .HasColumnName("ngayCa");

                    b.HasKey("Id")
                        .HasName("PK__Shift__3213E83F659C3EB0");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("OnlineFood.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("diaChi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Lienhe")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("lienhe");

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenNhaCungCap");

                    b.HasKey("Id")
                        .HasName("PK__Supplier__3213E83F54B67DAD");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("OnlineFood.Models.Supply", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdBill")
                        .HasColumnType("int")
                        .HasColumnName("idBill");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenNguyenLieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenNguyenLieu");

                    b.HasKey("Id")
                        .HasName("PK__Supplies__3213E83F8E96E3E7");

                    b.HasIndex("IdBill");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("OrderSuppliesInfo", b =>
                {
                    b.Property<int>("Idordersupplies")
                        .HasColumnType("int")
                        .HasColumnName("idordersupplies");

                    b.Property<int>("Idsupplies")
                        .HasColumnType("int")
                        .HasColumnName("idsupplies");

                    b.HasKey("Idordersupplies", "Idsupplies")
                        .HasName("PK__OrderSup__50A25EC26BBCAAB7");

                    b.HasIndex("Idsupplies");

                    b.ToTable("OrderSuppliesInfo", (string)null);
                });

            modelBuilder.Entity("OrderSupplySupply", b =>
                {
                    b.Property<int>("Idordersupplies")
                        .HasColumnType("int");

                    b.Property<int>("Idsupplies")
                        .HasColumnType("int");

                    b.HasKey("Idordersupplies", "Idsupplies");

                    b.ToTable("OrderSupplySupply");
                });

            modelBuilder.Entity("RoleFunction", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "FunctionId")
                        .HasName("PK__RoleFunc__19E071B56DC0DA36");

                    b.HasIndex("FunctionId");

                    b.ToTable("RoleFunction", (string)null);
                });

            modelBuilder.Entity("OnlineFood.Models.Account", b =>
                {
                    b.HasOne("OnlineFood.Models.Role", "IdroleNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("Idrole")
                        .HasConstraintName("FK__Account__idrole__286302EC");

                    b.Navigation("IdroleNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Bill", b =>
                {
                    b.HasOne("OnlineFood.Models.Customer", "IdKhachHangNavigation")
                        .WithMany("Bills")
                        .HasForeignKey("IdKhachHang")
                        .IsRequired()
                        .HasConstraintName("FK__Bill__idKhachHan__5812160E");

                    b.HasOne("OnlineFood.Models.Promotion", "IdKmNavigation")
                        .WithMany("Bills")
                        .HasForeignKey("IdKm")
                        .IsRequired()
                        .HasConstraintName("FK__Bill__idKM__59FA5E80");

                    b.HasOne("OnlineFood.Models.Employee", "IdNhanVienNavigation")
                        .WithMany("Bills")
                        .HasForeignKey("IdNhanVien")
                        .IsRequired()
                        .HasConstraintName("FK__Bill__idNhanVien__59063A47");

                    b.HasOne("OnlineFood.Models.OrderInfo", "IdOrderInfoNavigation")
                        .WithMany("Bills")
                        .HasForeignKey("IdOrderInfo")
                        .IsRequired()
                        .HasConstraintName("FK__Bill__idOrderInf__5BE2A6F2");

                    b.HasOne("OnlineFood.Models.Payment", "IdPhuongThucNavigation")
                        .WithMany("Bills")
                        .HasForeignKey("IdPhuongThuc")
                        .IsRequired()
                        .HasConstraintName("FK__Bill__idPhuongTh__5AEE82B9");

                    b.Navigation("IdKhachHangNavigation");

                    b.Navigation("IdKmNavigation");

                    b.Navigation("IdNhanVienNavigation");

                    b.Navigation("IdOrderInfoNavigation");

                    b.Navigation("IdPhuongThucNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.BillSupply", b =>
                {
                    b.HasOne("OnlineFood.Models.Supplier", "IdNhaCungCapNavigation")
                        .WithMany("BillSupplies")
                        .HasForeignKey("IdNhaCungCap")
                        .IsRequired()
                        .HasConstraintName("FK__BillSuppl__idNha__3D5E1FD2");

                    b.HasOne("OnlineFood.Models.OrderSupply", "IdordersuppliesNavigation")
                        .WithMany("BillSupplies")
                        .HasForeignKey("Idordersupplies")
                        .IsRequired()
                        .HasConstraintName("FK__BillSuppl__idord__3E52440B");

                    b.Navigation("IdNhaCungCapNavigation");

                    b.Navigation("IdordersuppliesNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Cart", b =>
                {
                    b.HasOne("OnlineFood.Models.Food", "IdFoodNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("IdFood")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__idFood__49C3F6B7");

                    b.HasOne("OnlineFood.Models.Promotion", "IdKmNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("IdKm")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__idKM__48CFD27E");

                    b.Navigation("IdFoodNavigation");

                    b.Navigation("IdKmNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Customer", b =>
                {
                    b.HasOne("OnlineFood.Models.Account", "IdAccountNavigation")
                        .WithMany("Customers")
                        .HasForeignKey("IdAccount")
                        .IsRequired()
                        .HasConstraintName("FK__Customer__idAcco__440B1D61");

                    b.Navigation("IdAccountNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Employee", b =>
                {
                    b.HasOne("OnlineFood.Models.Shift", "IdShiftNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdShift")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__idShif__300424B4");

                    b.HasOne("OnlineFood.Models.Account", "IdaccountNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("Idaccount")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__idacco__2F10007B");

                    b.Navigation("IdShiftNavigation");

                    b.Navigation("IdaccountNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Food", b =>
                {
                    b.HasOne("OnlineFood.Models.FoodCategory", "IdDanhMucNavigation")
                        .WithMany("Foods")
                        .HasForeignKey("IdDanhMuc")
                        .IsRequired()
                        .HasConstraintName("FK__Food__idDanhMuc__36B12243");

                    b.Navigation("IdDanhMucNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.InfoFood", b =>
                {
                    b.HasOne("OnlineFood.Models.Food", "IdFoodNavigation")
                        .WithMany("InfoFoods")
                        .HasForeignKey("IdFood")
                        .IsRequired()
                        .HasConstraintName("FK__InfoFood__idFood__5EBF139D");

                    b.HasOne("OnlineFood.Models.Supply", "IdNguyenLieuNavigation")
                        .WithMany("InfoFoods")
                        .HasForeignKey("IdNguyenLieu")
                        .IsRequired()
                        .HasConstraintName("FK__InfoFood__idNguy__5FB337D6");

                    b.Navigation("IdFoodNavigation");

                    b.Navigation("IdNguyenLieuNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Latest", b =>
                {
                    b.HasOne("OnlineFood.Models.Bill", "IdBillNavigation")
                        .WithMany("Latests")
                        .HasForeignKey("IdBill")
                        .IsRequired()
                        .HasConstraintName("FK__Latest__idBill__68487DD7");

                    b.HasOne("OnlineFood.Models.BillSupply", "IdBillSuppliesNavigation")
                        .WithMany("Latests")
                        .HasForeignKey("IdBillSupplies")
                        .IsRequired()
                        .HasConstraintName("FK__Latest__idBillSu__693CA210");

                    b.HasOne("OnlineFood.Models.Customer", "IdCustomerNavigation")
                        .WithMany("Latests")
                        .HasForeignKey("IdCustomer")
                        .IsRequired()
                        .HasConstraintName("FK__Latest__idCustom__6A30C649");

                    b.HasOne("OnlineFood.Models.OrderSupply", "IdOrderSuppliesNavigation")
                        .WithMany("Latests")
                        .HasForeignKey("IdOrderSupplies")
                        .IsRequired()
                        .HasConstraintName("FK__Latest__idOrderS__6B24EA82");

                    b.Navigation("IdBillNavigation");

                    b.Navigation("IdBillSuppliesNavigation");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdOrderSuppliesNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Notification", b =>
                {
                    b.HasOne("OnlineFood.Models.Bill", "IdBillNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdBill")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__idBil__6477ECF3");

                    b.HasOne("OnlineFood.Models.BillSupply", "IdBillsuppliesNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdBillsupplies")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__idBil__656C112C");

                    b.HasOne("OnlineFood.Models.Customer", "IdCustomerNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdCustomer")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__idCus__628FA481");

                    b.HasOne("OnlineFood.Models.Order", "IdOrderNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdOrder")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__idOrd__6383C8BA");

                    b.Navigation("IdBillNavigation");

                    b.Navigation("IdBillsuppliesNavigation");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdOrderNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Order", b =>
                {
                    b.HasOne("OnlineFood.Models.Cart", "IdCartNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdCart")
                        .IsRequired()
                        .HasConstraintName("FK__Order__idCart__5070F446");

                    b.HasOne("OnlineFood.Models.DeliveryMethod", "IdDeliveryNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdDelivery")
                        .IsRequired()
                        .HasConstraintName("FK__Order__idDeliver__5165187F");

                    b.HasOne("OnlineFood.Models.Food", "IdFoodNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdFood")
                        .IsRequired()
                        .HasConstraintName("FK__Order__idFood__4F7CD00D");

                    b.HasOne("OnlineFood.Models.Customer", "IdKhachHangNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdKhachHang")
                        .IsRequired()
                        .HasConstraintName("FK__Order__idKhachHa__4E88ABD4");

                    b.Navigation("IdCartNavigation");

                    b.Navigation("IdDeliveryNavigation");

                    b.Navigation("IdFoodNavigation");

                    b.Navigation("IdKhachHangNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.OrderInfo", b =>
                {
                    b.HasOne("OnlineFood.Models.Food", "IdMonAnNavigation")
                        .WithMany("OrderInfos")
                        .HasForeignKey("IdMonAn")
                        .IsRequired()
                        .HasConstraintName("FK__OrderInfo__idMon__5535A963");

                    b.HasOne("OnlineFood.Models.Customer", "IdUserNavigation")
                        .WithMany("OrderInfos")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__OrderInfo__idUse__5441852A");

                    b.Navigation("IdMonAnNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.OrderSupply", b =>
                {
                    b.HasOne("OnlineFood.Models.Supplier", "IdNhaCungCapNavigation")
                        .WithMany("OrderSupplies")
                        .HasForeignKey("IdNhaCungCap")
                        .IsRequired()
                        .HasConstraintName("FK__OrderSupp__idNha__3A81B327");

                    b.HasOne("OnlineFood.Models.Employee", "IdNhanVienNavigation")
                        .WithMany("OrderSupplies")
                        .HasForeignKey("IdNhanVien")
                        .IsRequired()
                        .HasConstraintName("FK__OrderSupp__idNha__398D8EEE");

                    b.Navigation("IdNhaCungCapNavigation");

                    b.Navigation("IdNhanVienNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Supply", b =>
                {
                    b.HasOne("OnlineFood.Models.BillSupply", "IdBillNavigation")
                        .WithMany("Supplies")
                        .HasForeignKey("IdBill")
                        .IsRequired()
                        .HasConstraintName("FK__Supplies__idBill__412EB0B6");

                    b.Navigation("IdBillNavigation");
                });

            modelBuilder.Entity("OrderSuppliesInfo", b =>
                {
                    b.HasOne("OnlineFood.Models.OrderSupply", null)
                        .WithMany()
                        .HasForeignKey("Idordersupplies")
                        .IsRequired()
                        .HasConstraintName("FK__OrderSupp__idord__6E01572D");

                    b.HasOne("OnlineFood.Models.Supply", null)
                        .WithMany()
                        .HasForeignKey("Idsupplies")
                        .IsRequired()
                        .HasConstraintName("FK__OrderSupp__idsup__6EF57B66");
                });

            modelBuilder.Entity("RoleFunction", b =>
                {
                    b.HasOne("OnlineFood.Models.Function", null)
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .IsRequired()
                        .HasConstraintName("FK__RoleFunct__Funct__72C60C4A");

                    b.HasOne("OnlineFood.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__RoleFunct__RoleI__71D1E811");
                });

            modelBuilder.Entity("OnlineFood.Models.Account", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("OnlineFood.Models.Bill", b =>
                {
                    b.Navigation("Latests");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("OnlineFood.Models.BillSupply", b =>
                {
                    b.Navigation("Latests");

                    b.Navigation("Notifications");

                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("OnlineFood.Models.Cart", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlineFood.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Latests");

                    b.Navigation("Notifications");

                    b.Navigation("OrderInfos");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlineFood.Models.DeliveryMethod", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlineFood.Models.Employee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("OrderSupplies");
                });

            modelBuilder.Entity("OnlineFood.Models.Food", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("InfoFoods");

                    b.Navigation("OrderInfos");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlineFood.Models.FoodCategory", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("OnlineFood.Models.Order", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("OnlineFood.Models.OrderInfo", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("OnlineFood.Models.OrderSupply", b =>
                {
                    b.Navigation("BillSupplies");

                    b.Navigation("Latests");
                });

            modelBuilder.Entity("OnlineFood.Models.Payment", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("OnlineFood.Models.Promotion", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Carts");
                });

            modelBuilder.Entity("OnlineFood.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("OnlineFood.Models.Shift", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("OnlineFood.Models.Supplier", b =>
                {
                    b.Navigation("BillSupplies");

                    b.Navigation("OrderSupplies");
                });

            modelBuilder.Entity("OnlineFood.Models.Supply", b =>
                {
                    b.Navigation("InfoFoods");
                });
#pragma warning restore 612, 618
        }
    }
}
