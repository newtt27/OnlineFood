// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineFood.Data;

#nullable disable

namespace OnlineFood.Migrations
{
    [DbContext(typeof(OnlineFoodContext))]
    [Migration("20241015092654_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineFood.Models.Account", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.Property<string>("Loaitaikhoan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("loaitaikhoan");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Tenhienthi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenhienthi");

                    b.HasKey("Username")
                        .HasName("PK__Account__F3DBC573E86863FE");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("OnlineFood.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Giatien")
                        .HasColumnType("int")
                        .HasColumnName("giatien");

                    b.Property<int>("IdKhachhang")
                        .HasColumnType("int")
                        .HasColumnName("idKhachhang");

                    b.Property<int>("IdSanpham")
                        .HasColumnType("int")
                        .HasColumnName("idSanpham");

                    b.Property<int>("Souong")
                        .HasColumnType("int")
                        .HasColumnName("souong");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int")
                        .HasColumnName("trangthai");

                    b.HasKey("Id")
                        .HasName("PK__Cart__3213E83F20DED48B");

                    b.HasIndex("IdKhachhang");

                    b.HasIndex("IdSanpham");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("OnlineFood.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("image");

                    b.Property<string>("TenDanhmuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenDanhmuc");

                    b.HasKey("Id")
                        .HasName("PK__Categori__3213E83FCD4869B4");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OnlineFood.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("diachi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Hovaten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("hovaten");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("image");

                    b.Property<string>("Ngaylap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ngaylap");

                    b.Property<string>("Sodienthoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sodienthoai");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3213E83FF9F7E20F");

                    b.HasIndex("Username");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("OnlineFood.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("image");

                    b.Property<DateOnly>("Ngaybatdau")
                        .HasColumnType("date")
                        .HasColumnName("ngaybatdau");

                    b.Property<DateOnly>("Ngayketthuc")
                        .HasColumnType("date")
                        .HasColumnName("ngayketthuc");

                    b.Property<string>("Noidung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("noidung");

                    b.Property<int>("Phantram")
                        .HasColumnType("int")
                        .HasColumnName("phantram");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int")
                        .HasColumnName("trangthai");

                    b.HasKey("Id")
                        .HasName("PK__Event__3213E83F1F3153FA");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("OnlineFood.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("IdCart")
                        .HasColumnType("int")
                        .HasColumnName("idCart");

                    b.Property<int>("IdKhachhang")
                        .HasColumnType("int")
                        .HasColumnName("idKhachhang");

                    b.Property<int>("IdSanpham")
                        .HasColumnType("int")
                        .HasColumnName("idSanpham");

                    b.Property<int>("Soluong")
                        .HasColumnType("int")
                        .HasColumnName("soluong");

                    b.Property<int>("Tongtien")
                        .HasColumnType("int")
                        .HasColumnName("tongtien");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3213E83FCDD43B76");

                    b.HasIndex("IdCart");

                    b.HasIndex("IdKhachhang");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("OnlineFood.Models.Paymentdetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("GiaTienSau")
                        .HasColumnType("int")
                        .HasColumnName("giaTienSau");

                    b.Property<int>("GiatienTruoc")
                        .HasColumnType("int")
                        .HasColumnName("giatienTruoc");

                    b.Property<string>("HotenKhachhang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hotenKhachhang");

                    b.Property<int>("IdKhachhang")
                        .HasColumnType("int")
                        .HasColumnName("idKhachhang");

                    b.Property<int?>("IdKuyenmai")
                        .HasColumnType("int")
                        .HasColumnName("idKuyenmai");

                    b.Property<int?>("IdPayment")
                        .HasColumnType("int")
                        .HasColumnName("idPayment");

                    b.Property<int>("IdSanpham")
                        .HasColumnType("int")
                        .HasColumnName("idSanpham");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("paymentMode");

                    b.Property<int>("Soluong")
                        .HasColumnType("int")
                        .HasColumnName("soluong");

                    b.HasKey("Id")
                        .HasName("PK__Paymentd__3213E83F5B10CF37");

                    b.HasIndex("IdKhachhang");

                    b.HasIndex("IdKuyenmai");

                    b.HasIndex("IdPayment");

                    b.HasIndex("IdSanpham");

                    b.ToTable("Paymentdetail", (string)null);
                });

            modelBuilder.Entity("OnlineFood.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Giatien")
                        .HasColumnType("int")
                        .HasColumnName("giatien");

                    b.Property<int>("IdDanhmuc")
                        .HasColumnType("int")
                        .HasColumnName("idDanhmuc");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("image");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mota");

                    b.Property<int>("Soluong")
                        .HasColumnType("int")
                        .HasColumnName("soluong");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ten");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int")
                        .HasColumnName("trangthai");

                    b.HasKey("Id")
                        .HasName("PK__Product__3213E83F0559204F");

                    b.HasIndex("IdDanhmuc");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("OnlineFood.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Tenquyen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenquyen");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int")
                        .HasColumnName("trangthai");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__Role__3213E83F596C93BB");

                    b.HasIndex("Username");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("OnlineFood.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("diachi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Hoten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("hoten");

                    b.Property<int?>("Idquyen")
                        .HasColumnType("int")
                        .HasColumnName("idquyen");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("image");

                    b.Property<string>("Sodienthoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sodienthoai");

                    b.HasKey("Id")
                        .HasName("PK__Staff__3213E83FC42A7DFC");

                    b.HasIndex("Idquyen");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("OnlineFood.Models.Cart", b =>
                {
                    b.HasOne("OnlineFood.Models.Customer", "IdKhachhangNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("IdKhachhang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Cart__idKhachhan__36B12243");

                    b.HasOne("OnlineFood.Models.Product", "IdSanphamNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("IdSanpham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Cart__idSanpham__35BCFE0A");

                    b.Navigation("IdKhachhangNavigation");

                    b.Navigation("IdSanphamNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Customer", b =>
                {
                    b.HasOne("OnlineFood.Models.Account", "UsernameNavigation")
                        .WithMany("Customers")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Customer__userna__2D27B809");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Payment", b =>
                {
                    b.HasOne("OnlineFood.Models.Cart", "IdCartNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("IdCart")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__idCart__3A81B327");

                    b.HasOne("OnlineFood.Models.Customer", "IdKhachhangNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("IdKhachhang")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__idKhach__398D8EEE");

                    b.Navigation("IdCartNavigation");

                    b.Navigation("IdKhachhangNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Paymentdetail", b =>
                {
                    b.HasOne("OnlineFood.Models.Customer", "IdKhachhangNavigation")
                        .WithMany("Paymentdetails")
                        .HasForeignKey("IdKhachhang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Paymentde__idKha__3D5E1FD2");

                    b.HasOne("OnlineFood.Models.Event", "IdKuyenmaiNavigation")
                        .WithMany("Paymentdetails")
                        .HasForeignKey("IdKuyenmai")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Paymentde__idKuy__403A8C7D");

                    b.HasOne("OnlineFood.Models.Payment", "IdPaymentNavigation")
                        .WithMany("Paymentdetails")
                        .HasForeignKey("IdPayment")
                        .HasConstraintName("FK__Paymentde__idPay__3E52440B");

                    b.HasOne("OnlineFood.Models.Product", "IdSanphamNavigation")
                        .WithMany("Paymentdetails")
                        .HasForeignKey("IdSanpham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Paymentde__idSan__3F466844");

                    b.Navigation("IdKhachhangNavigation");

                    b.Navigation("IdKuyenmaiNavigation");

                    b.Navigation("IdPaymentNavigation");

                    b.Navigation("IdSanphamNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Product", b =>
                {
                    b.HasOne("OnlineFood.Models.Category", "IdDanhmucNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdDanhmuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Product__idDanhm__2A4B4B5E");

                    b.Navigation("IdDanhmucNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Role", b =>
                {
                    b.HasOne("OnlineFood.Models.Account", "UsernameNavigation")
                        .WithMany("Roles")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Role__username__300424B4");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Staff", b =>
                {
                    b.HasOne("OnlineFood.Models.Role", "IdquyenNavigation")
                        .WithMany("Staff")
                        .HasForeignKey("Idquyen")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Staff__idquyen__32E0915F");

                    b.Navigation("IdquyenNavigation");
                });

            modelBuilder.Entity("OnlineFood.Models.Account", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("OnlineFood.Models.Cart", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("OnlineFood.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineFood.Models.Customer", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Paymentdetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("OnlineFood.Models.Event", b =>
                {
                    b.Navigation("Paymentdetails");
                });

            modelBuilder.Entity("OnlineFood.Models.Payment", b =>
                {
                    b.Navigation("Paymentdetails");
                });

            modelBuilder.Entity("OnlineFood.Models.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Paymentdetails");
                });

            modelBuilder.Entity("OnlineFood.Models.Role", b =>
                {
                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
